name: Docker

on:
  push:
    # Publish `main` as Docker `dev` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases and `latest`tag.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
  
  workflow_dispatch:

env:
  # NOTE: secrets cannot be access directly in conditions
  # https://github.com/actions/runner/issues/520
  SECRETS_ARE_AVAILABLE: ${{ secrets.CR_PAT != '' }}

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:

    name: OCI/Docker Build+Push
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'

    steps:
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true
      
      - uses: actions/checkout@v2.3.4
    
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
        if: env.SECRETS_ARE_AVAILABLE == 'true'
      
      - name: Setup Environment
        id: env
        run: |
          echo "DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
          echo "VERSION=0.0.1-dev.$(date +%Y%m%d)" >> $GITHUB_ENV
          echo "GITHUB_SHA7=$(echo ${GITHUB_SHA::7})" >> $GITHUB_ENV
      
      - name: Build OCI tags
        shell: bash
        run: |
          BASE_TAG="ghcr.io/${{ github.repository_owner }}/pivccu-modules"
          UNIQUE_TAG="${BASE_TAG}:${{ env.VERSION }}-${{ env.GITHUB_SHA7 }}"
          if [[ ${GITHUB_EVENT_NAME} == 'schedule' || ${GITHUB_EVENT_NAME} == 'workflow_dispatch' ]]; then
            TAG_TYPE="snapshot"
          else
            TAG_TYPE="dev"
          fi
          
          BRANCH="${GITHUB_REF##*/}"
          if [[ ${BRANCH} == 'master' ]] || ${BRANCH} == 'main'; then
            BRANCH_TAG="${BASE_TAG}:${TAG_TYPE}"
          else
            BRANCH_TAG="${BASE_TAG}:${TAG_TYPE}-${BRANCH}"
          fi

          echo "##[set-output name=unique_tag;]${UNIQUE_TAG}"
          echo "##[set-output name=branch_tag;]${BRANCH_TAG}"
        id: extract_branch

      - name: Build and push container image
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64 #,linux/arm64,linux/arm
          push: ${{ env.SECRETS_ARE_AVAILABLE }}

          labels: |
            org.opencontainers.image.title=pivccu-modules-container
            org.opencontainers.image.description=Install pivccu modules into your host
            org.opencontainers.image.vendor=OpenSource Project
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.licenses=Apache-2.0
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ env.DATE }}
            org.opencontainers.image.ref.name=${{ env.GIT_REF }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION }}
            io.hass.version=${{ env.VERSION }}
            io.hass.type=addon
            io.hass.arch=armhf|aarch64|amd64
          tags: |
            ${{ steps.extract_branch.outputs.unique_tag }}
            ${{ steps.extract_branch.outputs.branch_tag }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
